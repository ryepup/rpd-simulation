(in-package :rpd-simulation-examples)

(defprocess plant (spatial)
  ((solar-energy :accessor solar-energy :initform 1))
  (:documentation "a plant")
  (:action
   (iterate
     (while (and (plusp (solar-energy self))
		 (< (solar-energy self) 100)
		 ))
     ;; get power from the sun
     (incf (solar-energy self))
     (when (can-grow-p self)
       (if-let ((empty-spots
		 (remove-if-not #'null (nearby-spots self) :key #'process)))
	 (progn (decf (solar-energy self) 8)
		(activate (make-instance 'plant
					 :location (location (random-elt empty-spots))))
		(yield :hold 20))))
     (yield :hold 5))))

(defmethod can-grow-p ((self plant))
	   (> (solar-energy self) 10))

(defun ecology ()
  (with-spatial-simulation (:board '(90 90))
    (activate (make-instance 'plant :location (make-location 40 60 )))
    (simulate :until 800)))

(defun ecology-sdl ()
  (sdl:with-init ()
    (sdl:window 540 540)
    (setf (sdl:frame-rate) 0)
    (let ((colors (list))
	  (plant-surfaces (make-hash-table)))
      (labels ((plant-color (p)
		 (cond ((not (can-grow-p p)) sdl:*yellow*)
		       ((< (solar-energy p) 20) sdl:*green*)
		       (T (sdl:color :g (- 255 (* 2 (solar-energy p)))))))
	       (sdl-cell (color)
		 (let ((surface (sdl:create-surface 6 6)))
		   (sdl:fill-surface color :surface surface)
		   surface))
	       (plant-surf (p)
		 (let* ((c (plant-color p))
			(key (find c colors :test #'sdl:color=)))
		   (unless key
		     (setf (gethash c plant-surfaces) (sdl-cell c))
		     (push c colors))
		   (gethash (or key c) plant-surfaces)))
	       (render ()
		 (sdl:clear-display sdl:*black*)
		 (do-processes (p)
		   (let ((y (y p))
			 (x (x p))
			 (surf (plant-surf p)))
		     (sdl:set-point-* surf
				      :x (1+ (* 6 x))
				      :y (1+ (* 6 y)))
		     (sdl:blit-surface surf)))
		 (sdl:update-display)))
	(let ((*simulation-step-hook* #'render))
	  (sdl:with-events ()
	    (:quit-event () t)
	    (:video-expose-event () (sdl:update-display))
	    (:idle () 
		   (ecology)
		   (sdl:push-quit-event)))
	  (maphash-values #'sdl:free plant-surfaces))))))
